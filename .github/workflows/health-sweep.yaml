name: Health Sweep (daily audit + dashboard update)

on:
  schedule:
    - cron: '15 5 * * *'   # daily at 11:00 AM NPT (5:15 AM UTC)
  workflow_dispatch: {}

jobs:
  sweep:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare SSH key
        run: |
          echo "${{ secrets.SSH_KEY64 }}" | base64 -d > pem.pem
          chmod 400 pem.pem

      - name: Run docker audit on EC2 (save output)
        run: |
          ssh -i pem.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.SERVER_IP }} '/opt/scripts/docker_audit.sh' > docker_audit_output.txt || true
          echo "Saved docker audit output"

      - name: Build docs/health.json (sweep mode)
        run: |
          mkdir -p docs
          TIMESTAMP="$(date -u +%Y-%m-%dT%H:%M:%SZ)"

          RUNNING=$(grep -A100 "=== Running containers ===" docker_audit_output.txt | grep -B100 "=== All containers" | tail -n +2 | jq -R -s -c 'split("\n")[:-1]')
          ALL_CONTAINERS=$(grep -A100 "=== All containers" docker_audit_output.txt | grep -B100 "=== Dangling images" | tail -n +2 | jq -R -s -c 'split("\n")[:-1]')
          DANGLING=$(grep -A100 "=== Dangling images" docker_audit_output.txt | grep -B100 "=== Largest images" | tail -n +2 | jq -R -s -c 'split("\n")[:-1]')
          LARGEST=$(grep -A100 "=== Largest images" docker_audit_output.txt | tail -n +2 | jq -R -s -c 'split("\n")[:-1]')

          cat > docs/health.json <<EOF
          {
            "timestamp": "${TIMESTAMP}",
            "deployed": {
              "digest": "unchanged",
              "commit": "unchanged",
              "author": "unchanged"
            },
            "verification": {
              "status": "not checked",
              "outcome": "sweep"
            },
            "audit": {
              "running_containers": $RUNNING,
              "all_containers": $ALL_CONTAINERS,
              "dangling_images": $DANGLING,
              "largest_images": $LARGEST
            }
          }
          EOF

          echo "Built docs/health.json:"
          cat docs/health.json

          git config user.email "actions@github.com"
          git config user.name "github-actions[bot]"
          git add docs/health.json || true
          git commit -m "Health sweep update ${TIMESTAMP}" || echo "no changes to commit"
          git push || echo "push failed (branch protections?)"
